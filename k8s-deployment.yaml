apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
type: Opaque
data:
  access-key: bHVjYXJ2  # lucarv (base64 encoded)
  secret-key: bHVjYVBXRCRNaW5JMA==  # lucaPWD$MinI0 (base64 encoded)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jpeg2avif-js-deployment
  labels:
    app: jpeg2avif-js
spec:
  replicas: 3
  selector:
    matchLabels:
      app: jpeg2avif-js
  template:
    metadata:
      labels:
        app: jpeg2avif-js
    spec:
      containers:
      - name: jpeg2avif-js
        image: ghcr.io/ekskog/jpeg2avif-js:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: REDIS_HOST
          value: "redis-service.data.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DB
          value: "0"
        - name: MINIO_ENDPOINT
          value: "minio.minio.svc.cluster.local:9000"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: access-key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: secret-key
        - name: MINIO_BUCKET_NAME
          value: "jpeg2avif"
        - name: MINIO_USE_SSL
          value: "false"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 1800
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 1800
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: jpeg2avif-js-service
  labels:
    app: jpeg2avif-js
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: jpeg2avif-js
